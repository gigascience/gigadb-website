###########################################################
# General Setup
###########################################################

### Compose files  ###############################################################################################
# The file paths where docker-compose can file its YAML file

COMPOSE_FILE=ops/deployment/docker-compose.yml
# Keep the line below uncommented to enable profiling of the web application using Tideways XHPROF and XHGUI
#COMPOSE_FILE=ops/deployment/docker-compose.yml:ops/deployment/docker-compose.prof.yml
#COMPOSE_FILE=ops/deployment/docker-compose.yml:ops/deployment/docker-compose.prof.yml:ops/deployment/docker-compose.build.yml

### prefix for local container ##############################################################################
COMPOSE_PROJECT_NAME=deployment

### GitLab Private Token  ###############################################################################################
# This token allows access to the secret variables stored on GitLab.com for logins, passwords, api keys and secrets
# required by the project. If you don't have one, generate from your user account setting on Gitlab.com.

GITLAB_PRIVATE_TOKEN=

### GitLab API URLs  ####################################################################################################
# the urls be different for each environment and forks.
# group variables are supplied by Gigadb and set at group level (gigascience, forks and upstream) in GitLab.
# project variables are set at a project level by the owner of the fork
# the variables will be merged into a .secrets file
# Replace <Your fork name here> with urlencoded name of the fork

REPO_NAME=
GROUP_VARIABLES_URL="https://gitlab.com/api/v4/groups/gigascience/variables?per_page=100"
FORK_VARIABLES_URL="https://gitlab.com/api/v4/groups/3501869/variables"
PROJECT_VARIABLES_URL="https://gitlab.com/api/v4/projects/gigascience%2Fforks%2F$REPO_NAME/variables"

### Deployment Environment  #############################################################################################
# dev, ci,  staging or production
# determine whether we need to pull variables from GitLab

GIGADB_ENV=dev

### Application, Framework and Data Path #################################################################################
# Choose storage path on your machine. For all storage systems.

APPLICATION=../..
YII_PATH=/var/www/vendor/yiisoft/yii
YII2_PATH=/var/www/vendor/yiisoft/yii2
DATA_SAVE_PATH=~/.containers-data/default-gigadb
YII_DEBUG=true
YII_TRACE=3
DISABLE_CACHE=true

### Core services managed in Docker compose ##############################################################################
NGINX_VERSION=1.21.3
PHP_VERSION=7.4.33
APCU_VERSION=5.1.21
NODE_VERSION=20.11.0
POSTGRES_VERSION=14.8
YII_VERSION=1.1.28
YII2_VERSION=2.0.48.1


### Application Access variables ########################################################################################
# Point to your code

HOME_URL=http://gigadb.gigasciencejournal.com:9170
PUBLIC_HTTP_PORT=80
PUBLIC_HTTPS_PORT=443
SERVER_HOSTNAME=gigadb.gigasciencejournal.com
FILES_PUBLIC_URL=http://gigadb.gigasciencejournal.com/datasetfiles
SEARCH_RESULT_LIMIT=10

### Certificates for TLS termination configuration ######################################################################
CERT_EMAIL=foo@bar


### Test Coverage configuration #########################################################################################
COVERALLS_RUN_LOCALLY=1
GITLAB_UPSTREAM_PROJECT_ID=
MAIN_BRANCH=develop


### CSV to Yii migration script conversion configuration ################################################################
CSV_DIR=production_like

### Portainer credentials
# you obtain the bcrypt password by running:
# docker run --rm httpd:2.4-alpine htpasswd -nbB admin "<your chosen password here>" | cut -d ":" -f 2 | sed -e 's/\$/\$\$/g'
# then set the variable below with the obtained value
PORTAINER_BCRYPT=

### Monitoring
MONITORING_HOST=
MONITORING_USER=
MONITORING_PRIVATE_KEY_LOCAL_PATH=
