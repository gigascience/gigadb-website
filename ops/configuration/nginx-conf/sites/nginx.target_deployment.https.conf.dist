server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;


    # Security headers
    add_header                Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    add_header                X-Content-Type-Options nosniff;
    add_header                X-Frame-Options DENY;
    add_header                X-XSS-Protection "1; mode=block";
    add_header                Content-Security-Policy "
                                default-src 'self' 'unsafe-inline' 'unsafe-eval' http://gigadb.org http://penguin.genomics.cn https://www.rosaceae.org *.protocols.io https://sketchfab.com https://codeocean.com *.hypothes.is *.datatables.net *.cloudflare.com;
                                script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.matomo.cloud/gigadb.matomo.cloud/matomo.js *.hypothes.is *.datatables.net *.cloudflare.com *.google-analytics.com https://www.rosaceae.org https://www.protocols.io https://hypothes.is https://codeocean.com https://tumormap.ucsc.edu https://openlayers.org/en/v4.6.5/build/ol.js;
                                frame-src https://www.protocols.io https://hypothes.is https://www.rosaceae.org https://sketchfab.com https://codeocean.com https://tumormap.ucsc.edu;
                                child-src https://www.protocols.io https://hypothes.is https://www.rosaceae.org https://sketchfab.com https://codeocean.com https://tumormap.ucsc.edu;
                                style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net/npm/ol@v8.1.0/ol.css";
                                img-src blob: data: 'self' https://assets.gigadb-cdn.net *.tile.openstreetmap.org;
                                report-uri https://gigadb.report-uri.com/r/d/csp/enforce;
                                ";
    add_header                Content-Security-Policy-Report-Only "
                                default-src 'self' https://gigadb.org;
                                script-src 'self' https://cdn.matomo.cloud/gigadb.matomo.cloud/matomo.js https://*.hypothes.is https://*.datatables.net https://*.cloudflare.com https://*.google-analytics.com https://www.rosaceae.org https://www.protocols.io https://hypothes.is https://codeocean.com https://tumormap.ucsc.edu http://penguin.genomics.cn https://openlayers.org/en/v4.6.5/build/ol.js;
                                frame-src https://www.protocols.io https://hypothes.is https://www.rosaceae.org https://sketchfab.com https://codeocean.com https://tumormap.ucsc.edu http://penguin.genomics.cn;
                                child-src https://www.protocols.io https://hypothes.is https://www.rosaceae.org https://sketchfab.com https://codeocean.com https://tumormap.ucsc.edu http://penguin.genomics.cn;
                                report-uri https://gigadb.report-uri.com/r/d/csp/reportOnly;";

    # Cors headers
    add_header                Access-Control-Allow-Origin '*';
    add_header                Access-Control-Allow-Credentials 'true';
    add_header                Access-Control-Allow-Methods '*';
    add_header                Access-Control-Allow-Headers '*';


    server_name $SERVER_HOSTNAME web gigadb.dev gigadb.test;


    root /var/www;
    index index.php index.html index.htm;

    location ~* (common\.css|datatables\.css|pager\.css)$ {
        expires -1;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 365d;
    }

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors on;
        fastcgi_read_timeout 6000;
        fastcgi_send_timeout 600;
        fastcgi_connect_timeout 600;
        include fastcgi_params;
	include phplimit.conf;
    }

    location /search {
        limit_req zone=gigadbsearch burst=3 nodelay;
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 90s;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }


    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate (TODO: make hostname a variable)
    ssl_certificate /etc/letsencrypt/live/$SERVER_HOSTNAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$SERVER_HOSTNAME/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/ssl/nginx/dhparam.pem;

    # below section is based on: generated 2021-11-09, Mozilla Guideline v5.6, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration
    # https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&hsts=false&ocsp=false&guideline=5.6

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/$SERVER_HOSTNAME/chain.pem;

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;


    # Security headers
    add_header                Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    add_header                X-Content-Type-Options nosniff;
    add_header                X-Frame-Options DENY;
    add_header                X-XSS-Protection "1; mode=block";
    add_header                Content-Security-Policy "default-src 'self'; script-src https://*.matomo.cloud https://*.sentry.io https://sentry.io https://nominatim.openstreetmap.org 'self' 'unsafe-inline' 'unsafe-eval'; style-src https://fonts.googleapis.com 'self' 'unsafe-inline'; font-src https://fonts.gstatic.com https://fonts.googleapis.com 'self' data:; connect-src https://*.matomo.cloud 'self' ws://* wss://* https://*.sentry.io https://sentry.io https://*.googleapis.com; object-src 'self'; img-src https://*.google.com https://api.mapbox.com 'self' blob: data:; frame-src 'self' http://penguin.genomics.cn;";

    # Cors headers
    add_header                Access-Control-Allow-Origin '*';
    add_header                Access-Control-Allow-Credentials 'true';
    add_header                Access-Control-Allow-Methods '*';
    add_header                Access-Control-Allow-Headers '*';


    server_name portainer.$SERVER_HOSTNAME;
    root /var/www;
    index index.php index.html index.htm;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://portainer:9000;
    }

    location /api/websocket/ {
        proxy_http_version 1.1;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Upgrade $http_upgrade;
        proxy_pass         http://portainer:9000/api/websocket;
    }

    location ~ /\.ht {
        deny all;
    }


    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate (TODO: make hostname a variable)
    ssl_certificate /etc/letsencrypt/live/$SERVER_HOSTNAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$SERVER_HOSTNAME/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/ssl/nginx/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/$SERVER_HOSTNAME/chain.pem;

}
