<?php

//Enable multibyte unicode aware string functions. Only needed for PHP < 5.6. Requires php-mbstring module.

$dbConfig = json_decode(file_get_contents(dirname(__FILE__).'/db.json'), true);
$pre_config = require(dirname(__FILE__).'/local.php');

// Location where user images are stored
Yii::setPathOfAlias('uploadPath',dirname(__FILE__).DIRECTORY_SEPARATOR.'../../images/uploads');
Yii::setPathOfAlias('uploadURL', '/images/uploads/');

return CMap::mergeArray(array(
    'basePath'=>dirname(__FILE__).DIRECTORY_SEPARATOR.'..',
    'name'=>'GigaDB',

    'preload'=>array(
        'log',
    ),

    'import'=>array(
        'application.models.*',
        'application.components.*',
        'application.interfaces.*',
        'application.behaviors.*',
        'application.vendors.*',
        'application.helpers.*',
        'application.tests.unit.*',
        'application.tests.functional.*',
        'application.tests.support.*',
    ),

    'modules'=>array(
        'gii'=>array(
            'class'=>'system.gii.GiiModule',
            'password'=>'gigadbyii',
            'ipFilters'=>array('*.*.*.*'),
        ),
        'opauth' => array(
            'opauthParams' => array(
                'security_salt' => '${OPAUTH_SECURITY_SALT}',
                'callback_url' => '/site/loginAffiliate',
                'callback_transport' => 'get',
                'Strategy' => array(
                    'Facebook' => array(
                        'app_id' => '${FACEBOOK_APP_ID}',
                        'app_secret' => '${FACEBOOK_APP_SECRET}',
                        'scope' => 'email',
                    ),
                    'LinkedIn' => array(
                        'api_key' => '${LINKEDIN_API_KEY}',
                        'secret_key' => '${LINKEDIN_SECRET_KEY}',
                    ),
                    'Google' => array(
                        'client_id' => '${GOOGLE_CLIENT_ID}',
                        'client_secret' => '${GOOGLE_SECRET}',
                    ),
                    'Twitter' => array(
                        'key' => '${TWITTER_KEY}',
                        'secret' => '${TWITTER_SECRET}',
                    ),
                    'Orcid' => array(
                        'client_id' => '${ORCID_CLIENT_ID}',
                        'client_secret' => '${ORCID_CLIENT_SECRET}',
                        'environment' => '${ORCID_CLIENT_ENVIRONMENT}',
                    ),
                ),
            ),
        ),
    ),

    'components'=>array(
        'db'=>array(
            'class'=>'system.db.CDbConnection',
            'connectionString'=>"pgsql:dbname={$dbConfig['database']};host={$dbConfig['host']}",
            'username'=>$dbConfig['user'],
            'password'=>$dbConfig['password'],
            'charset'=>'utf8',
            'persistent'=>true,
            'enableParamLogging'=>true,
            'schemaCachingDuration'=>30
        ),
        'ftp' => array(
			'class' => 'ext.GFtp.GFtpApplicationComponent',
			'connectionString' => '${FTP_CONNECTION_URL}',
			'timeout' => 120,
			'passive' => true
		),
        'request' => array(
            //'enableCookieValidation' => true,
        ),

        'clientScript'=>array(
               'scriptMap'=> array(
                   'jquery.js' => false,
                   'jquery.min.js' => false,
                    'jquery.ba-bbq.js' => false,
                    'jquery.ba-bbq.min.js' => false,
                    'jquery-ui.min.js' => false,
                    'jquery-ui.js' => false,
                    'jquery-ui.css' => false,
                ),
       ),

        'autocomplete' => array(
            'class'     => 'application.components.AutoCompleteService',
        ),

        'attributeService' => array(
            'class'     => 'application.components.AttributeService',
        ),

        'newsAndFeedsService' => array(
            'class'     => 'application.components.NewsAndFeedsService',
        ),

        'session' => array(
            'class' => 'system.web.CDbHttpSession',
            'connectionID' => 'db',
            'timeout' => 3600,
            'autoCreateSessionTable' => false,
        ),
        'errorHandler'=>array(
            'errorAction'=>'site/error',
        ),
        'urlManager'=>array(
            'urlFormat'=>'path',
            'showScriptName'=>false,
            'rules'=>array(
                '/dataset/<id:\d+>'=>'dataset/view/id/<id>',
                '/dataset/<id:\d+>/<slug:.+>'=>'dataset/view/id/<id>',
                '.*'=>'site/index',
            ),
        ),
        'log'=>array(
            'class'=>'CLogRouter',
            'routes'=>array(
                array(
                    'class'=>'CFileLogRoute',
                    'levels'=>'error, warning, info, debug',
                ),
            ),
        ),

        'messages'=>array(
            'class'=>'CPhpMessageSource',
        ),
        'user'=>array(
            // enable cookie-based authentication
            'allowAutoLogin'=>true,
            //User WebUser
            'class'=>'WebUser',
        ),
        'authManager'=>array(
            'class'=>'CDbAuthManager',
            'connectionID'=>'db',
        ),
        'image'=>array(
            'class'=>'application.extensions.image.CImageComponent',
            // GD or ImageMagick
            'driver'=>'GD',
        ),
        'cache'=>array(
            'class'=>'system.caching.CApcCache',
            'useApcu'=>true
        ),
    ),

    'params' => array(
        'citations' => array(
            'services' => array(
                'scholar_query' => "View citations on Google Scholar",
                'ePMC_query' => "View citations on Europe PubMed Central",
                'dimension_query' => "View citations on Dimensions",
                ),
            'urls' => array(
                'scholar_query' => "http://scholar.google.com/scholar?q=@id",
                'ePMC_query' => "http://europepmc.org/search?scope=fulltext&query=(REF:'@id')",
                'dimension_query' => "https://app.dimensions.ai/discover/publication?search_text=@id",
                ),
            'images' => array(
                'scholar_query' => "/images/google_scholar.png",
                'ePMC_query' => "/images/ePMC.jpg",
                'dimension_query' => "/images/dimensions.jpg",
            ),
        ),
        'publications' => array(
            'pubmed' => 'http://www.ncbi.nlm.nih.gov/pubmed/@id',
        ),
        'cacheConfig' =>array(
            'DatasetComponents' => array(
                'invalidationQuery' =>'with
the_dataset_log as (
select max(created_at) as latest from dataset_log where dataset_id=@id
),
the_curation_log as (
select max(creation_date) as latest from curation_log where dataset_id=@id
)
select d.latest,c.latest from the_dataset_log d, the_curation_log c;',
                'timeToLive' =>2592000 //30 days: 60*60*24*30
            ),
        ),
        // date formats
        'js_date_format' => 'dd-mm-yy',
        'db_date_format' => "%Y-%m-%d",
        'display_date_format' => "%gggggggd-%m-%Y",
        'display_short_date_format' => "%d-%m",
        'language' => 'en' ,
        'languages' => array('en' => 'EN', 'zh_tw' => 'TW'),
    ),
), $pre_config);
