#!/bin/bash

set -e
set -u

source .env

# before running tests, run migration for main database first (GigaDB)
#./ops/scripts/setup_devdb.sh gigadb_testdata
docker-compose run --rm test bash -c "pg_restore -h database -p 5432 -U gigadb -d gigadb --clean --no-owner -v sql/gigadb.pgdmp"
#docker-compose run --rm application ./protected/yiic migrate --connectionID=db --migrationPath=application.migrations.schema --interactive=0
# before running tests, run migration for main database first (FUW)
docker-compose exec -T console /app/yii migrate --interactive=0
# running functional tests for GigaDB, make sure to reference the appropriate bootstrap, so database can be loaded and restored properly
if [ ${GITLAB_PRIVATE_TOKEN:+1} ] ;then
				docker-compose run --rm test ./vendor/phpunit/phpunit/phpunit --testsuite functional --bootstrap protected/tests/functional_custom_bootstrap.php --verbose --configuration protected/tests/phpunit.xml --no-coverage

else
				#TODO: this if-test is temporary, we should look into why these tests are failing on Linux when we've got a moment
				docker-compose run --rm test ./vendor/phpunit/phpunit/phpunit --testsuite functional --bootstrap protected/tests/functional_custom_bootstrap.php --verbose --configuration protected/tests/phpunit_guest.xml --no-coverage
fi
# running functional tests for File Upload Wizard's backend and frontend apps
#docker-compose exec -T console /app/vendor/bin/codecept -c /app/backend run functional
#docker-compose exec -T console /app/vendor/bin/codecept -c /app/frontend run functional
#docker-compose exec -T console /app/vendor/bin/codecept -c /app/console run functional

