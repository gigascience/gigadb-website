version: '3.7'

services:

  web:
    image: nginx:${NGINX_VERSION}-alpine
    volumes:
      - ./:/var/www
      - ${DATA_SAVE_PATH}/${COMPOSE_PROJECT_NAME}/nginx/sites-available:/etc/nginx/sites-available
      - ./nginx-conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-conf/upstream.conf:/etc/nginx/conf.d/upstream.conf:ro
    ports:
      - "${PUBLIC_HTTP_PORT}:80"
      - "${PUBLIC_HTTPS_PORT}:443"
    networks:
      web-tier:
        ipv4_address: 172.16.238.10

  application:
    env_file: container-env.dev
    build:
      context: .
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
    volumes:
      - ./:/var/www
      - ${DATA_SAVE_PATH}/${COMPOSE_PROJECT_NAME}/yii:${YII_PATH}
      - ./php-conf/php-${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ./php-conf/gigadb.pool.conf:/usr/local/etc/php-fpm.d/gigadb.pool.conf
      - ./php-conf/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./php-conf/gigadb.ini:/usr/local/etc/php/conf.d/gigadb.ini
    expose:
      - "9000"
    networks:
      - web-tier
      - db-tier

  database:
    image: postgres:${POSTGRES_VERSION}-alpine
    env_file: container-env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql/gigadb_testdata.sql:/docker-entrypoint-initdb.d/1-gigadb_testdata.sql
      - ./postgresql-conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c 'hba_file=/etc/postgresql/pg_hba.conf'
    expose:
      - "5432"
    networks:
      - db-tier

  init:
    image: php:${PHP_VERSION}-cli
    volumes:
      - ./:/var/www
      - ${DATA_SAVE_PATH}/${COMPOSE_PROJECT_NAME}/yii:${YII_PATH}
    depends_on:
      - application
      - web
      - database
    command: /var/www/protected/yiic lesscompiler
    networks:
      - web-tier

  test:
    env_file: container-env.dev
    build:
      context: .
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_PGSQL=true
        - INSTALL_PG_CLIENT=true
        - PG_CLIENT_VERSION=${POSTGRES_VERSION}
        - INSTALL_NETCAT_JQ=true
    volumes:
      - ./:/var/www
      - ${DATA_SAVE_PATH}/${COMPOSE_PROJECT_NAME}/yii:${YII_PATH}
      - /var/run/docker.sock:/var/run/docker.sock
      - ./php-conf/gigadb.ini:/usr/local/etc/php/conf.d/gigadb.ini
      - ./tmp:/tmp
    command: bash
    networks:
      - web-tier
      - db-tier
    depends_on:
      - phantomjs
    extra_hosts:
      - "gigadb.dev:172.16.238.10"

  phantomjs:
    image: wernight/phantomjs:2.1.1
    command: phantomjs --webdriver=8910
    expose:
      - "8910"
    networks:
      - web-tier
    extra_hosts:
      - "gigadb.dev:172.16.238.10"

networks:
  web-tier:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
  db-tier:

volumes:
  pgdata:
