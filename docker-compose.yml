version: '3.7'

services:

  web:
    image: nginx:${NGINX_VERSION}-alpine
    environment:
      YII_PATH: ${YII_PATH}
    volumes:
      - ${APPLICATION}/:/var/www
      - ${DATA_SAVE_PATH}/nginx:/etc/nginx/sites-available
      - ${APPLICATION}/nginx-conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${APPLICATION}/nginx-conf/upstream.conf:/etc/nginx/conf.d/upstream.conf:ro
    ports:
      - "${PUBLIC_HTTP_PORT}:80"
      - "${PUBLIC_HTTPS_PORT}:443"
    networks:
      web-tier:
        ipv4_address: 172.16.238.10

  application:
    environment:
      YII_PATH: ${YII_PATH}
    build:
      context: .
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_OPCACHE=true
    volumes:
      - ${APPLICATION}/:/var/www
      - ${APPLICATION}/vendor/yiisoft/yii:${YII_PATH}
      - ${APPLICATION}/php-conf/php-${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APPLICATION}/php-conf/gigadb.pool.conf:/usr/local/etc/php-fpm.d/gigadb.pool.conf
      - ${APPLICATION}/php-conf/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ${APPLICATION}/php-conf/gigadb.ini:/usr/local/etc/php/conf.d/gigadb.ini
    expose:
      - "9000"
    networks:
      - web-tier
      - db-tier

  database:
    image: postgres:${POSTGRES_VERSION}-alpine
    environment:
      POSTGRES_DB: gigadb
      POSTGRES_USER: gigadb
      POSTGRES_PASSWORD: vagrant
    volumes:
      - ${DATA_SAVE_PATH}/postgres:/var/lib/postgresql/data
      - ${APPLICATION}/sql/gigadb_testdata.sql:/docker-entrypoint-initdb.d/1-gigadb_testdata.sql
      - ${APPLICATION}/postgresql-conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c 'hba_file=/etc/postgresql/pg_hba.conf'
    expose:
      - "5432"
    networks:
      - db-tier

  config:
    image: cfmanteiga/alpine-bash-curl-jq:latest
    volumes:
      - ${APPLICATION}/:/var/www
      - ${APPLICATION}/vendor/yiisoft/yii:${YII_PATH}
      - ${DATA_SAVE_PATH}/nginx:/etc/nginx/sites-available
    command: /var/www/generate_config.sh

  webapp:
    image: composer:1.5
    volumes:
      - ${APPLICATION}/:/var/www
      - ${APPLICATION}/vendor/yiisoft/yii:${YII_PATH}
      - ${APPLICATION}:/app
    depends_on:
      - application
      - web
      - database
    command: composer install
    networks:
      - web-tier

  test:
    build:
      context: .
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_OPCACHE=true
        - INSTALL_PGSQL=true
        - INSTALL_PG_CLIENT=true
        - PG_CLIENT_VERSION=${POSTGRES_VERSION}
        - INSTALL_XDEBUG=true
        - INSTALL_NETCAT_JQ=true
    environment:
      YII_PATH: ${YII_PATH}
    volumes:
      - ${APPLICATION}/:/var/www
      - ${APPLICATION}/vendor/yiisoft/yii:${YII_PATH}
      - ${DATA_SAVE_PATH}/nginx:/etc/nginx/sites-available
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APPLICATION}/php-conf/gigadb.ini:/usr/local/etc/php/conf.d/gigadb.ini
      - ${APPLICATION}/php-conf/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ${APPLICATION}/tmp:/tmp
    networks:
      - web-tier
      - db-tier
    depends_on:
      - phantomjs
    extra_hosts:
      - "gigadb.dev:172.16.238.10"
    command: ./tests/run

  phantomjs:
    image: wernight/phantomjs:2.1.1
    command: phantomjs --webdriver=8910
    expose:
      - "8910"
    networks:
      - web-tier
    extra_hosts:
      - "gigadb.dev:172.16.238.10"

networks:
  web-tier:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
  db-tier:


