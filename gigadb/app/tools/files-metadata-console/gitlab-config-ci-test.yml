FilesMetaDataConsoleTestRun:
  stage: test
  needs: ["FilesMetaDataConsoleTestBuild"]
  script:
    - env | grep "^HOME_URL" >> $APPLICATION/.env
    - env | grep "^GIGADB_" >> $APPLICATION/.secrets
    # Load Base image
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    - docker load -i php-8.2.3-cli-bullseye.tar
    - docker load -i php-$PHP_VERSION-fpm-bullseye.tar
    - docker load -i php-$PHP_VERSION-cli-bullseye.tar
    - docker load -i alpine-3_14.tar
    - docker load -i nginx-$NGINX_VERSION-alpine.tar
    - docker load -i node-$NODE_VERSION-bullseye-slim.tar
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/application:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/test:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/console:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/web:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/tusd:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/ftpd:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/watcher:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/tusd:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/beanstalkd:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/web:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/js:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/fuw-admin:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/fuw-worker:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/gigadb-worker:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/fuw-public:latest || true
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/files-metadata-console:latest || true
    - docker tag registry.gitlab.com/$CI_PROJECT_PATH/files-metadata-console:latest ${CI_PROJECT_NAME}_files-metadata-console:latest
    - ./up.sh
    - cp .secrets gigadb/app/tools/files-metadata-console/
    - cp .env gigadb/app/tools/files-metadata-console/
    - cd gigadb/app/tools/files-metadata-console
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run --rm configure
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run --rm composer install
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run --rm files-metadata-console vendor/codeception/codeception/codecept build
    - ./test
  environment:
    name: dev
  artifacts:
    untracked: true
    when: always
    expire_in: 1 week