
ReadmeGeneratorBuildStaging:
  stage: staging build
  variables:
    LOCAL_COMPOSE: "docker-compose -f ./docker-compose.production.yml"
    REPO_NAME: $CI_PROJECT_NAME
    GIGADB_ENV: staging
    PROJECT_VARIABLES_URL: "https://gitlab.com/api/v4/projects/gigascience%2Fforks%2F$REPO_NAME/variables"
    MISC_VARIABLES_URL: "https://gitlab.com/api/v4/projects/gigascience%2Fcnhk-infra/variables"
    GROUP_VARIABLES_URL: "https://gitlab.com/api/v4/groups/gigascience/variables?per_page=100"
    FORK_VARIABLES_URL: "https://gitlab.com/api/v4/groups/3501869/variables"
    GIGADB_COMPOSE_PROJECT_NAME: $CI_PROJECT_NAME
  script:
    - env | grep -iE "(GIGADB_ENV|REPO_NAME|PROJECT_VARIABLES_URL|MISC_VARIABLES_URL|GITLAB_PRIVATE_TOKEN|CI_PROJECT_URL|GROUP_VARIABLES_URL|FORK_VARIABLES_URL)"| tee gigadb/app/tools/readme-generator/.env
    - cd gigadb/app/tools/readme-generator
    - $LOCAL_COMPOSE run --rm configure  # run configure to create configuration file with variables from staging
    - docker-compose -f docker-compose.yml run --rm tool composer install  # install composer dependencies
    - $LOCAL_COMPOSE build production_tool  # build production container from the production docker file
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com  # log in to Gitlab so we can push the container image there
    - docker tag ${CI_PROJECT_NAME}_production_tool:latest registry.gitlab.com/$CI_PROJECT_PATH/production_tool:$GIGADB_ENV
    - docker push registry.gitlab.com/$CI_PROJECT_PATH/production_tool:$GIGADB_ENV
  dependencies: []
  environment:
    name: staging
  artifacts:
    paths:
      - gigadb/app/tools/readme-generator/.env
      - gigadb/app/tools/readme-generator/.secrets
      - gigadb/app/tools/readme-generator/config
      - .env
      - .secrets
    when: always
    expire_in: 3 days
  needs: ["ReadmeGeneratorTest"]
